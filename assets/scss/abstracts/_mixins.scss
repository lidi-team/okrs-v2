// ======================================================
// Abstracts :: Mixins
// ======================================================

// Responsive breakpoint down (PC -> SP)
// ======================================================
// Example:
//
// .block {
//   background-color: green;
//
//   @include breakpoint-down(desktop) {
//     background-color: red;
//   }
// }
$breakpoints: (
  'desktop': (
    max-width: 1199.98px,
  ),
  'tablet': (
    max-width: 991.98px,
  ),
  'phone': (
    max-width: 767.98px,
  ),
  'smallphone': (
    max-width: 575.98px,
  ),
);

@mixin breakpoint-down($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. ' + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

// Position
// ======================================================
// Example:
//
// .class {
//   @include position(absolute, 10px, 10px, 10px, 10px);
// }
@mixin position(
  $position,
  $top: null,
  $right: null,
  $bottom: null,
  $left: null
) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// Width !== Height
// ======================================================
// Example:
//
// .class {
//   @include size(10px, 20px);
// }
@mixin size($width, $height) {
  width: $width;
  height: $height;
}

// Width === Height
// ======================================================
// Example:
//
// .class {
//   @include square(10px);
// }
@mixin square($size) {
  @include size($size, $size);
}

// @alias element
@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

// @alias modifier
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

// Width === Height + Border Radius
// ======================================================
// Example:
//
// .class {
//   @include circle(10px);
// }
@mixin circle($size) {
  @include size($size, $size);
  border-radius: 50%;
}

// Reset UL OL
// ======================================================
// Example:
//
// .class {
//   @include list-unstyled();
// }
@mixin list-unstyled() {
  margin: 0;
  padding: 0;
  list-style: none;
}

// Truncate oneline
// ======================================================
// Already supported in Bootstrap 4 mixin: @include text-truncate()
// Example:
//
// .class {
//   @include truncate-oneline();
// }
@mixin truncate-oneline() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// Truncate multiline with CSS3
// ======================================================
// Example:
//
// .class {
//   @include truncate-multiline-new(3);
// }
@mixin truncate-multiline-new($line-number) {
  overflow: hidden;
  text-overflow: ellipsis;
  /* stylelint-disable-next-line value-no-vendor-prefix */
  display: -webkit-box;
  /* stylelint-disable property-no-vendor-prefix */
  -webkit-line-clamp: $line-number;

  /* autoprefixer: off */
  -webkit-box-orient: vertical;
}
//Example:
//
// .class {
//   @include truncate-multiline-old({ $line-number: 2 });
// }
@mixin truncate-multiline-old(
  $line-height: 1.2em,
  $line-number: 1,
  $bg-color: $white
) {
  overflow: hidden;
  position: relative;
  line-height: $line-height;
  max-height: $line-height * $line-number;
  text-align: justify;
  margin-right: -1em;
  padding-right: 1em;

  &:before {
    content: '...';
    position: absolute;
    right: 0;
    bottom: 0;
  }

  &:after {
    content: '';
    position: absolute;
    right: 0;
    width: 1em;
    height: 1em;
    margin-top: 0.2em;
    background: $bg-color;
  }
}

@mixin text-ellipsis($clamp) {
  display: -webkit-box;
  max-width: 100%;
  height: auto;
  margin: 0 auto;
  -webkit-line-clamp: $clamp;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin okrs-button-action {
  display: flex;
  place-content: center flex-end;
  padding: 10px $unit-5 0 $unit-5;
  border-top: 1px solid $gray-primary-1;
}

@mixin drop-shadow {
  filter: drop-shadow(0px 0px 0px rgba(63, 63, 68, 0.05)),
    drop-shadow(0px 1px 3px rgba(63, 63, 68, 0.15));
}

@mixin box-shadow {
  box-shadow: inset 0px -1px 0px #dfe3e8;
}

@mixin account-form {
  display: flex;
  flex-direction: column;
  place-content: center;
  width: 500px;
  padding: $unit-12;
  box-shadow: $box-shadow-default;
  background-color: $white;
  border-radius: $border-radius-base;
}

@mixin box-middle {
  border: 1px #dcdfe6 solid;
  border-radius: 7px;
  padding: $unit-7;
  background: white;
  margin: 0 0 $unit-7 0;
  &:hover {
    transition: all 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
    border: 1px #c0c4cc solid;
    box-shadow: 0px 2px 5px rgba(33, 43, 54, 0.1), 0px 2px 10px #212b3626;
  }
}
